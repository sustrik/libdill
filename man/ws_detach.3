.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "WS_DETACH" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
ws_detach \- terminates WebSocket protocol and returns the underlying
socket
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ ws_detach(
\ \ \ \ int\ s,
\ \ \ \ int\ status,
\ \ \ \ const\ void*\ buf,
\ \ \ \ size_t\ len,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
\f[B]WARNING: This is experimental functionality and the API may change
in the future.\f[]
.PP
WebSocket is a message\-based protocol defined in RFC 6455.
It can be used as a bidirectional communication channel for
communication with a web server.
.PP
This function does the terminal WebSocket handshake and returns the
underlying socket to the user.
The socket is closed even in the case of error.
.PP
\f[B]s\f[]: Handle of the WebSocket socket.
.PP
\f[B]status\f[]: Status to send to the peer.
If set zero, no status will be sent.
.PP
\f[B]buf\f[]: Message to send to the peer.
If set to NULL, no message will be sent.
Note that WebSocket protocol limits the sizeof the shutdown message to
125 bytes.
.PP
\f[B]len\f[]: Size of the message to send to the peer, in bytes.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns underlying socket handle.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]ECONNRESET\f[]: Broken connection.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle is not an WebSocket protocol handle.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH EXAMPLE
.IP
.nf
\f[C]
struct\ ipaddr\ addr;
ipaddr_remote(&addr,\ "www.example.org",\ 80,\ 0,\ \-1);
int\ s\ =\ tcp_connect(&addr,\ \-1);
s\ =\ ws_attach_client(s,\ "/",\ "www.example.org",\ WS_TEXT,\ \-1);
ws_send(s,\ WS_TEXT,\ "Hello,\ world!",\ 13,\ \-1);
int\ flags;
char\ buf[256];
ssize_t\ sz\ =\ ws_recv(s,\ &flags,\ buf,\ sizeof(buf),\ \-1);
assert(flags\ &\ WS_TEXT);
s\ =\ ws_detach(s,\ \-1);
tcp_close(s,\ \-1);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]mrecv\f[](3) \f[B]mrecvl\f[](3) \f[B]msend\f[](3)
\f[B]msendl\f[](3) \f[B]now\f[](3) \f[B]ws_attach_client\f[](3)
\f[B]ws_attach_client_mem\f[](3) \f[B]ws_attach_server\f[](3)
\f[B]ws_attach_server_mem\f[](3) \f[B]ws_done\f[](3) \f[B]ws_recv\f[](3)
\f[B]ws_recvl\f[](3) \f[B]ws_request_key\f[](3)
\f[B]ws_response_key\f[](3) \f[B]ws_send\f[](3) \f[B]ws_sendl\f[](3)
\f[B]ws_status\f[](3)
