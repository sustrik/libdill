.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "HMAKE" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
hmake \- creates a handle
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdillimpl.h>

struct\ hvfs\ {
\ \ \ \ void\ *(*query)(struct\ hvfs\ *vfs,\ const\ void\ *type);
\ \ \ \ void\ (*close)(int\ h);
\ \ \ \ int\ (*done)(struct\ hvfs\ *vfs,\ int64_t\ deadline);
};

int\ hmake(
\ \ \ \ struct\ hvfs*\ hvfs);
\f[]
.fi
.SH DESCRIPTION
.PP
A handle is the user\-space equivalent of a file descriptor.
Coroutines and channels are represented by handles.
.PP
Unlike with file descriptors, however, you can use the \f[B]hmake\f[]
function to create your own type of handle.
.PP
The argument of the function is a virtual\-function table of operations
associated with the handle.
.PP
When implementing the \f[B]close\f[] operation, keep in mind that
invoking blocking operations is not allowed, as blocking operations
invoked within the context of a \f[B]close\f[] operation will fail with
an \f[B]ECANCELED\f[] error.
.PP
To close a handle, use the \f[B]hclose\f[] function.
.PP
\f[B]hvfs\f[]: virtual\-function table of operations associated with the
handle
.SH RETURN VALUE
.PP
In case of success the function returns newly created handle.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]EINVAL\f[]: Invalid argument.
.IP \[bu] 2
\f[B]ENOMEM\f[]: Not enough memory.
.SH SEE ALSO
.PP
\f[B]hclose\f[](3) \f[B]hown\f[](3) \f[B]hquery\f[](3)
