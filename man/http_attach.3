.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "HTTP_ATTACH" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
http_attach \- creates HTTP protocol on top of underlying socket
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ http_attach(
\ \ \ \ int\ s);
\f[]
.fi
.SH DESCRIPTION
.PP
\f[B]WARNING: This is experimental functionality and the API may change
in the future.\f[]
.PP
HTTP is an application\-level protocol described in RFC 7230.
This implementation handles only the request/response exchange.
Whatever comes after that must be handled by a different protocol.
.PP
This function instantiates HTTP protocol on top of the underlying
protocol.
.PP
\f[B]s\f[]: Handle of the underlying socket.
It must be a bytestream protocol.
.PP
The socket can be cleanly shut down using \f[B]http_detach\f[] function.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns newly created socket handle.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]EMFILE\f[]: The maximum number of file descriptors in the process
are already open.
.IP \[bu] 2
\f[B]ENFILE\f[]: The maximum number of file descriptors in the system
are already open.
.IP \[bu] 2
\f[B]ENOMEM\f[]: Not enough memory.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle does not support this operation.
.IP \[bu] 2
\f[B]EPROTO\f[]: Underlying socket is not a bytestream socket.
.SH EXAMPLE
.IP
.nf
\f[C]
int\ s\ =\ tcp_connect(&addr,\ \-1);
s\ =\ http_attach(s);
http_sendrequest(s,\ "GET",\ "/",\ \-1);
http_sendfield(s,\ "Host",\ "www.example.org",\ \-1);
http_done(s,\ \-1);
char\ reason[256];
http_recvstatus(s,\ reason,\ sizeof(reason),\ \-1);
while(1)\ {
\ \ \ \ char\ name[256];
\ \ \ \ char\ value[256];
\ \ \ \ int\ rc\ =\ http_recvfield(s,\ name,\ sizeof(name),\ value,\ sizeof(value),\ \-1);
\ \ \ \ if(rc\ ==\ \-1\ &&\ errno\ ==\ EPIPE)\ break;
}
s\ =\ http_detach(s,\ \-1);
tcp_close(s);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]hclose\f[](3) \f[B]http_attach_mem\f[](3) \f[B]http_detach\f[](3)
\f[B]http_done\f[](3) \f[B]http_recvfield\f[](3)
\f[B]http_recvrequest\f[](3) \f[B]http_recvstatus\f[](3)
\f[B]http_sendfield\f[](3) \f[B]http_sendrequest\f[](3)
\f[B]http_sendstatus\f[](3)
