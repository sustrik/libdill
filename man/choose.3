.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "CHOOSE" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
choose \- performs one of multiple channel operations
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

struct\ chclause\ {
\ \ \ \ int\ op;
\ \ \ \ int\ ch;
\ \ \ \ void\ *val;
\ \ \ \ size_t\ len;
};

int\ choose(
\ \ \ \ struct\ chclause*\ clauses,
\ \ \ \ int\ nclauses,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
Accepts a list of channel operations.
Performs one that can be done first.
If multiple operations can be done immediately, the one that comes
earlier in the array is executed.
.PP
\f[B]clauses\f[]: Operations to choose from.
See below.
.PP
\f[B]nclauses\f[]: Number of clauses.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.PP
The fields in \f[B]chclause\f[] structure are as follows:
.IP \[bu] 2
\f[B]op\f[]: Operation to perform.
Either \f[B]CHSEND\f[] or \f[B]CHRECV\f[].
.IP \[bu] 2
\f[B]ch\f[]: The channel to perform the operation on.
.IP \[bu] 2
\f[B]val\f[]: Buffer containing the value to send or receive.
.IP \[bu] 2
\f[B]len\f[]: Size of the buffer.
.SH RETURN VALUE
.PP
In case of success the function returns index of the clause that caused
the function to exit.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.PP
Even if an index is returned, \f[B]errno\f[] may still be set to an
error value.
The operation was successfull only if \f[B]errno\f[] is set to zero.
.SH ERRORS
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]EINVAL\f[]: Invalid argument.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.PP
Additionally, if the function returns an index it can set \f[B]errno\f[]
to one of the following values:
.IP \[bu] 2
\f[B]0\f[]: Operation was completed successfully.
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]EINVAL\f[]: Invalid parameter.
.IP \[bu] 2
\f[B]EMSGSIZE\f[]: The peer expected a message with different size.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: Operation not supported.
Presumably, the handle isn\[aq]t a channel.
.IP \[bu] 2
\f[B]EPIPE\f[]: Channel has been closed with \f[B]chdone\f[].
.SH EXAMPLE
.IP
.nf
\f[C]
int\ val1\ =\ 0;
int\ val2;
struct\ chclause\ clauses[]\ =\ {
\ \ \ \ {CHSEND,\ ch,\ &val1,\ sizeof(val1)},
\ \ \ \ {CHRECV,\ ch,\ &val2,\ sizeof(val2)}
};
int\ rc\ =\ choose(clauses,\ 2,\ now()\ +\ 1000);
if(rc\ ==\ \-1)\ {
\ \ \ \ perror("Choose\ failed");
\ \ \ \ exit(1);
}
if(rc\ ==\ 0)\ {
\ \ \ \ printf("Value\ %d\ sent.\\n",\ val1);
}
if(rc\ ==\ 1)\ {
\ \ \ \ printf("Value\ %d\ received.\\n",\ val2);
}
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]chdone\f[](3) \f[B]chmake\f[](3) \f[B]chmake_mem\f[](3)
\f[B]chrecv\f[](3) \f[B]chsend\f[](3) \f[B]now\f[](3)
