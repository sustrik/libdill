.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "CHSEND" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
chsend \- sends a message to a channel
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ chsend(
\ \ \ \ int\ ch,
\ \ \ \ const\ void*\ val,
\ \ \ \ size_t\ len,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
Sends a message to a channel.
.PP
The size of the message sent to the channel must match the size of the
message requested from the channel.
Otherwise, both peers fail with \f[B]EMSGSIZE\f[] error.
.PP
If there\[aq]s no receiver for the message, the function blocks until
one shows up or until the deadline expires.
.PP
\f[B]ch\f[]: The channel.
.PP
\f[B]val\f[]: Pointer to the value to send to the channel.
.PP
\f[B]len\f[]: Size of the value to send to the channel, in bytes.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.SH RETURN VALUE
.PP
In case of success the function returns 0.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]EINVAL\f[]: Invalid argument.
.IP \[bu] 2
\f[B]EMSGSIZE\f[]: The peer expected a different message size.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle does not support this operation.
.IP \[bu] 2
\f[B]EPIPE\f[]: Channel has been closed with chdone.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH EXAMPLE
.IP
.nf
\f[C]
int\ val\ =\ 42;
int\ rc\ =\ chsend(ch,\ &val,\ sizeof(val),\ now()\ +\ 1000);
if(rc\ !=\ 0)\ {
\ \ \ \ perror("Cannot\ send\ message");
\ \ \ \ exit(1);
}
printf("Value\ %d\ sent\ successfully.\\n",\ val);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]chdone\f[](3) \f[B]chmake\f[](3) \f[B]chmake_mem\f[](3)
\f[B]choose\f[](3) \f[B]chrecv\f[](3) \f[B]now\f[](3)
