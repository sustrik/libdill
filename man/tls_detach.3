.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "TLS_DETACH" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
tls_detach \- terminates TLS protocol and returns the underlying socket
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ tls_detach(
\ \ \ \ int\ s,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
\f[B]WARNING: This is experimental functionality and the API may change
in the future.\f[]
.PP
TLS is a cryptographic protocol to provide secure communication over the
network.
It is a bytestream protocol.
.PP
This function does the terminal handshake and returns underlying socket
to the user.
The socket is closed even in the case of error.
.PP
\f[B]s\f[]: Handle of the TLS socket.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.PP
This function is not available if libdill is compiled without
\f[B]\-\-enable\-tls\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns underlying socket handle.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]ECONNRESET\f[]: Broken connection.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle is not a TLS protocol handle.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH EXAMPLE
.IP
.nf
\f[C]
int\ s\ =\ tcp_connect(&addr,\ \-1);
s\ =\ tls_attach_client(s,\ \-1);
bsend(s,\ "ABC",\ 3,\ \-1);
char\ buf[3];
ssize_t\ sz\ =\ brecv(s,\ buf,\ sizeof(buf),\ \-1);
s\ =\ tls_detach(s,\ \-1);
tcp_close(s);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]brecv\f[](3) \f[B]brecvl\f[](3) \f[B]bsend\f[](3)
\f[B]bsendl\f[](3) \f[B]now\f[](3) \f[B]tls_attach_client\f[](3)
\f[B]tls_attach_client_mem\f[](3) \f[B]tls_attach_server\f[](3)
\f[B]tls_attach_server_mem\f[](3) \f[B]tls_done\f[](3)
