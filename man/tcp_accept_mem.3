.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "TCP_ACCEPT_MEM" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
tcp_accept_mem \- accepts an incoming TCP connection
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ tcp_accept_mem(
\ \ \ \ int\ s,
\ \ \ \ struct\ ipaddr*\ addr,
\ \ \ \ struct\ tcp_storage*\ mem,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
TCP protocol is a reliable bytestream protocol for transporting data
over network.
It is defined in RFC 793.
.PP
This function accepts an incoming TCP connection.
.PP
This function allows to avoid one dynamic memory allocation by storing
the object in user\-supplied memory.
Unless you are hyper\-optimizing use \f[B]tcp_accept\f[] instead.
.PP
\f[B]s\f[]: Socket created by \f[B]tcp_listen\f[].
.PP
\f[B]addr\f[]: Out parameter.
IP address of the connecting endpoint.
Can be \f[B]NULL\f[].
.PP
\f[B]mem\f[]: The structure to store the newly created object in.
It must not be deallocated before the object is closed.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.PP
The socket can be cleanly shut down using \f[B]tcp_close\f[] function.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns handle of the new connection.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]EMFILE\f[]: The maximum number of file descriptors in the process
are already open.
.IP \[bu] 2
\f[B]ENFILE\f[]: The maximum number of file descriptors in the system
are already open.
.IP \[bu] 2
\f[B]ENOMEM\f[]: Not enough memory.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle does not support this operation.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH EXAMPLE
.IP
.nf
\f[C]
struct\ ipaddr\ addr;
ipaddr_local(&addr,\ NULL,\ 5555,\ 0);
int\ ls\ =\ tcp_listen(&addr,\ 10);
int\ s\ =\ tcp_accept(ls,\ NULL,\ \-1);
bsend(s,\ "ABC",\ 3,\ \-1);
char\ buf[3];
brecv(s,\ buf,\ sizeof(buf),\ \-1);
tcp_close(s);
tcp_close(ls);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]brecv\f[](3) \f[B]brecvl\f[](3) \f[B]bsend\f[](3)
\f[B]bsendl\f[](3) \f[B]hclose\f[](3) \f[B]now\f[](3)
\f[B]tcp_accept\f[](3) \f[B]tcp_close\f[](3) \f[B]tcp_connect\f[](3)
\f[B]tcp_connect_mem\f[](3) \f[B]tcp_done\f[](3) \f[B]tcp_listen\f[](3)
\f[B]tcp_listen_mem\f[](3) \f[B]tcp_wrap_fd\f[](3)
\f[B]tcp_wrap_fd_mem\f[](3)
