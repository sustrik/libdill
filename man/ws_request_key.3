.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "WS_REQUEST_KEY" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
ws_request_key \- generates an unique value for Sec\-WebSocket\-Key
field
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ ws_request_key(
\ \ \ \ char*\ request_key);
\f[]
.fi
.SH DESCRIPTION
.PP
\f[B]WARNING: This is experimental functionality and the API may change
in the future.\f[]
.PP
WebSocket is a message\-based protocol defined in RFC 6455.
It can be used as a bidirectional communication channel for
communication with a web server.
.PP
This is a helper function that can be used when doing a custom HTTP
handshake for the WebSocket protocol (see \f[B]WS_NOHTTP\f[] flag).
It generates an unique RFC\-compliant key to be filled into
\f[B]Sec\-WebSocket\-Key\f[] of the HTTP request.
.PP
The generated key is null\-terminated.
.PP
\f[B]request_key\f[]: Buffer to hold the generated request key.
It must be at least \f[B]WS_KEY_SIZE\f[] bytes long.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns 0.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EINVAL\f[]: Invalid argument.
.SH EXAMPLE
.IP
.nf
\f[C]
char\ request_key[WS_KEY_SIZE];
ws_request_key(request_key);
http_sendfield(s,\ "Sec\-WebSocket\-Key",\ request_key,\ \-1);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]mrecv\f[](3) \f[B]mrecvl\f[](3) \f[B]msend\f[](3)
\f[B]msendl\f[](3) \f[B]ws_attach_client\f[](3)
\f[B]ws_attach_client_mem\f[](3) \f[B]ws_attach_server\f[](3)
\f[B]ws_attach_server_mem\f[](3) \f[B]ws_detach\f[](3)
\f[B]ws_done\f[](3) \f[B]ws_recv\f[](3) \f[B]ws_recvl\f[](3)
\f[B]ws_response_key\f[](3) \f[B]ws_send\f[](3) \f[B]ws_sendl\f[](3)
\f[B]ws_status\f[](3)
