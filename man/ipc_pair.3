.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "IPC_PAIR" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
ipc_pair \- creates a pair of mutually connected IPC sockets
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ ipc_pair(
\ \ \ \ int\ s[2]);
\f[]
.fi
.SH DESCRIPTION
.PP
This function creates a pair of mutually connected IPC sockets.
.PP
\f[B]s\f[]: Out parameter.
Two handles to the opposite ends of the connection.
.PP
The sockets can be cleanly shut down using \f[B]ipc_close\f[] function.
.SH RETURN VALUE
.PP
In case of success the function returns 0.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]EMFILE\f[]: The maximum number of file descriptors in the process
are already open.
.IP \[bu] 2
\f[B]ENFILE\f[]: The maximum number of file descriptors in the system
are already open.
.IP \[bu] 2
\f[B]ENOMEM\f[]: Not enough memory.
.SH EXAMPLE
.IP
.nf
\f[C]
int\ s[2];
int\ rc\ =\ ipc_pair(s);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]hclose\f[](3) \f[B]ipc_accept\f[](3) \f[B]ipc_accept_mem\f[](3)
\f[B]ipc_close\f[](3) \f[B]ipc_connect\f[](3)
\f[B]ipc_connect_mem\f[](3) \f[B]ipc_done\f[](3) \f[B]ipc_listen\f[](3)
\f[B]ipc_listen_mem\f[](3) \f[B]ipc_pair_mem\f[](3)
