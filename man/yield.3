.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "YIELD" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
yield \- yields CPU to other coroutines
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ yield(void);
\f[]
.fi
.SH DESCRIPTION
.PP
By calling this function, you give other coroutines a chance to run.
.PP
You should consider using \f[B]yield\f[] when doing lengthy computations
which don\[aq]t have natural coroutine switching points such as socket
or channel operations or msleep.
.SH RETURN VALUE
.PP
In case of success the function returns 0.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.SH EXAMPLE
.IP
.nf
\f[C]
for(i\ =\ 0;\ i\ !=\ 1000000;\ ++i)\ {
\ \ \ \ expensive_computation();
\ \ \ \ yield();\ /*\ Give\ other\ coroutines\ a\ chance\ to\ run.\ */
}
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]bundle\f[](3) \f[B]bundle_go\f[](3) \f[B]bundle_go_mem\f[](3)
\f[B]bundle_mem\f[](3) \f[B]bundle_wait\f[](3) \f[B]go\f[](3)
\f[B]go_mem\f[](3)
