.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "MRECVL" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
mrecvl \- receives a message
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

ssize_t\ mrecvl(
\ \ \ \ int\ s,
\ \ \ \ struct\ iolist*\ first,
\ \ \ \ struct\ iolist*\ last,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
This function receives message from a socket.
It is a blocking operation that unblocks only after entire message is
received.
There is no such thing as partial receive.
Either entire message is received or no message at all.
.PP
This function accepts a linked list of I/O buffers instead of a single
buffer.
Argument \f[B]first\f[] points to the first item in the list,
\f[B]last\f[] points to the last buffer in the list.
The list represents a single, fragmented message, not a list of multiple
messages.
Structure \f[B]iolist\f[] has the following members:
.IP
.nf
\f[C]
void\ *iol_base;\ \ \ \ \ \ \ \ \ \ /*\ Pointer\ to\ the\ buffer.\ */
size_t\ iol_len;\ \ \ \ \ \ \ \ \ \ /*\ Size\ of\ the\ buffer.\ */
struct\ iolist\ *iol_next;\ /*\ Next\ buffer\ in\ the\ list.\ */
int\ iol_rsvd;\ \ \ \ \ \ \ \ \ \ \ \ /*\ Reserved.\ Must\ be\ set\ to\ zero.\ */
\f[]
.fi
.PP
When receiving, \f[B]iol_base\f[] equal to NULL means that
\f[B]iol_len\f[] bytes should be skipped.
.PP
The function returns \f[B]EINVAL\f[] error in the case the list is
malformed:
.IP \[bu] 2
If \f[B]last\->iol_next\f[] is not \f[B]NULL\f[].
.IP \[bu] 2
If \f[B]first\f[] and \f[B]last\f[] don\[aq]t belong to the same list.
.IP \[bu] 2
If there\[aq]s a loop in the list.
.IP \[bu] 2
If \f[B]iol_rsvd\f[] of any item is non\-zero.
.PP
The list (but not the buffers themselves) can be temporarily modified
while the function is in progress.
However, once the function returns the list is guaranteed to be the same
as before the call.
.PP
\f[B]s\f[]: The socket.
.PP
\f[B]first\f[]: Pointer to the first item of a linked list of I/O
buffers.
.PP
\f[B]last\f[]: Pointer to the last item of a linked list of I/O buffers.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.PP
If both \f[B]first\f[] and \f[B]last\f[] arguments are set to
\f[B]NULL\f[] the message is received and silently dropped.
The function will still return the size of the message.
.SH RETURN VALUE
.PP
In case of success the function returns size of the received message, in
bytes.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]EBUSY\f[]: The handle is currently being used by a different
coroutine.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]ECONNRESET\f[]: Broken connection.
.IP \[bu] 2
\f[B]EINVAL\f[]: Invalid argument.
.IP \[bu] 2
\f[B]EMSGSIZE\f[]: The data won\[aq]t fit into the supplied buffer.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle does not support this operation.
.IP \[bu] 2
\f[B]EPIPE\f[]: Closed connection.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH SEE ALSO
.PP
\f[B]mrecv\f[](3) \f[B]msend\f[](3) \f[B]msendl\f[](3) \f[B]now\f[](3)
