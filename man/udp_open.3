.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "UDP_OPEN" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
udp_open \- opens an UDP socket
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ udp_open(
\ \ \ \ struct\ ipaddr*\ local,
\ \ \ \ struct\ ipaddr*\ remote);
\f[]
.fi
.SH DESCRIPTION
.PP
UDP is an unreliable message\-based protocol defined in RFC 768.
The size of the message is limited.
The protocol has no initial or terminal handshake.
A single socket can be used to different destinations.
.PP
This function creates an UDP socket.
.PP
\f[B]local\f[]: IP address to be used to set source IP address in
outgoing packets.
Also, the socket will receive packets sent to this address.
If port in the address is set to zero an ephemeral port will be chosen
and filled into the local address.
.PP
\f[B]remote\f[]: IP address used as default destination for outbound
packets.
It is used when destination address in \f[B]udp_send\f[] function is set
to \f[B]NULL\f[].
It is also used by \f[B]msend\f[] and \f[B]mrecv\f[] functions which
don\[aq]t allow to specify the destination address explicitly.
Furthermore, if remote address is set, all the packets arriving from
different addresses will be silently dropped.
.PP
To close this socket use \f[B]hclose\f[] function.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns newly created socket handle.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EADDRINUSE\f[]: The local address is already in use.
.IP \[bu] 2
\f[B]EADDRNOTAVAIL\f[]: The specified address is not available from the
local machine.
.IP \[bu] 2
\f[B]EINVAL\f[]: Invalid argument.
.IP \[bu] 2
\f[B]EMFILE\f[]: The maximum number of file descriptors in the process
are already open.
.IP \[bu] 2
\f[B]ENFILE\f[]: The maximum number of file descriptors in the system
are already open.
.IP \[bu] 2
\f[B]ENOMEM\f[]: Not enough memory.
.SH EXAMPLE
.IP
.nf
\f[C]
struct\ ipaddr\ local;
ipaddr_local(&local,\ NULL,\ 5555,\ 0);
struct\ ipaddr\ remote;
ipaddr_remote(&remote,\ "server.example.org",\ 5555,\ 0,\ \-1);
int\ s\ =\ udp_open(&local,\ &remote);
udp_send(s1,\ NULL,\ "ABC",\ 3);
char\ buf[2000];
ssize_t\ sz\ =\ udp_recv(s,\ NULL,\ buf,\ sizeof(buf),\ \-1);
hclose(s);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]hclose\f[](3) \f[B]mrecv\f[](3) \f[B]mrecvl\f[](3)
\f[B]msend\f[](3) \f[B]msendl\f[](3) \f[B]udp_open_mem\f[](3)
\f[B]udp_recv\f[](3) \f[B]udp_recvl\f[](3) \f[B]udp_send\f[](3)
\f[B]udp_sendl\f[](3)
