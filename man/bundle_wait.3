.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "BUNDLE_WAIT" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
bundle_wait \- wait while coroutines in the bundle finish
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ bundle_wait(
\ \ \ \ int\ bndl,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
If there are no coroutines in the bundle the function will succeed
immediately.
Otherwise, it will wait until all the coroutines in the bundle finish or
until deadline is reached.
.PP
\f[B]bndl\f[]: Handle of a coroutine bundle.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.SH RETURN VALUE
.PP
In case of success the function returns 0.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle does not support this operation.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH EXAMPLE
.IP
.nf
\f[C]
int\ b\ =\ bundle();
bundle_go(b,\ worker());
bundle_go(b,\ worker());
bundle_go(b,\ worker());
/*\ Give\ wrokers\ 1\ second\ to\ finish.\ */
bundle_wait(b,\ now()\ +\ 1000);
/*\ Cancel\ any\ remaining\ workers.\ */
hclose(b);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]bundle\f[](3) \f[B]bundle_go\f[](3) \f[B]bundle_go_mem\f[](3)
\f[B]bundle_mem\f[](3) \f[B]go\f[](3) \f[B]go_mem\f[](3) \f[B]now\f[](3)
\f[B]yield\f[](3)
