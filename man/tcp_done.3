.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "TCP_DONE" "3" "" "libdill" "libdill Library Functions"
.hy
.SH NAME
.PP
tcp_done \- half\-closes a TCP connection
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libdill.h>

int\ tcp_done(
\ \ \ \ int\ s,
\ \ \ \ int64_t\ deadline);
\f[]
.fi
.SH DESCRIPTION
.PP
TCP protocol is a reliable bytestream protocol for transporting data
over network.
It is defined in RFC 793.
.PP
This function closes the outbound half of TCP connection.
Technically, it sends a FIN packet to the peer.
This will, in turn, cause the peer to get \f[B]EPIPE\f[] error after it
has received all the data.
.PP
\f[B]s\f[]: The TCP connection handle.
.PP
\f[B]deadline\f[]: A point in time when the operation should time out,
in milliseconds.
Use the \f[B]now\f[] function to get your current point in time.
0 means immediate timeout, i.e., perform the operation if possible or
return without blocking if not.
\-1 means no deadline, i.e., the call will block forever if the
operation cannot be performed.
.PP
This function is not available if libdill is compiled with
\f[B]\-\-disable\-sockets\f[] option.
.SH RETURN VALUE
.PP
In case of success the function returns 0.
In case of error it returns \-1 and sets \f[B]errno\f[] to one of the
values below.
.SH ERRORS
.IP \[bu] 2
\f[B]EBADF\f[]: Invalid handle.
.IP \[bu] 2
\f[B]ECANCELED\f[]: Current coroutine was canceled.
.IP \[bu] 2
\f[B]ENOTSUP\f[]: The handle does not support this operation.
.IP \[bu] 2
\f[B]EPIPE\f[]: The connection was already half\-closed.
.IP \[bu] 2
\f[B]ETIMEDOUT\f[]: Deadline was reached.
.SH EXAMPLE
.IP
.nf
\f[C]
struct\ ipaddr\ addr;
ipaddr_local(&addr,\ NULL,\ 5555,\ 0);
int\ ls\ =\ tcp_listen(&addr,\ 10);
int\ s\ =\ tcp_accept(ls,\ NULL,\ \-1);
bsend(s,\ "ABC",\ 3,\ \-1);
char\ buf[3];
brecv(s,\ buf,\ sizeof(buf),\ \-1);
tcp_close(s);
tcp_close(ls);
\f[]
.fi
.SH SEE ALSO
.PP
\f[B]brecv\f[](3) \f[B]brecvl\f[](3) \f[B]bsend\f[](3)
\f[B]bsendl\f[](3) \f[B]now\f[](3) \f[B]tcp_accept\f[](3)
\f[B]tcp_accept_mem\f[](3) \f[B]tcp_close\f[](3) \f[B]tcp_connect\f[](3)
\f[B]tcp_connect_mem\f[](3) \f[B]tcp_listen\f[](3)
\f[B]tcp_listen_mem\f[](3) \f[B]tcp_wrap_fd\f[](3)
\f[B]tcp_wrap_fd_mem\f[](3)
